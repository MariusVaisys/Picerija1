// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Picerija.Models;

namespace Picerija.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20200130094908_SeedData")]
    partial class SeedData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Picerija.Models.Pica", b =>
                {
                    b.Property<int>("PicaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Akcija")
                        .HasColumnType("bit");

                    b.Property<string>("Alergenai")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageThumnailUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Kaina")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("Pagaminta")
                        .HasColumnType("bit");

                    b.Property<string>("Pavadinimas")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RusisId")
                        .HasColumnType("int");

                    b.Property<string>("Sudetis")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PicaId");

                    b.HasIndex("RusisId");

                    b.ToTable("Picos");

                    b.HasData(
                        new
                        {
                            PicaId = 1,
                            Akcija = true,
                            Alergenai = "A,B,C",
                            ImageUrl = "C:\\Users\\Marius\\Desktop\\C#Vakariniai mokymai\\Picerija\\Picerija\\wwwroot\\paveiksliukai\\margarita.png",
                            Kaina = 7.99m,
                            Pagaminta = true,
                            Pavadinimas = "Margarita",
                            RusisId = 3,
                            Sudetis = "Padas, suris, Desreles"
                        },
                        new
                        {
                            PicaId = 2,
                            Akcija = true,
                            Alergenai = "A,B,C",
                            ImageUrl = "C:\\Users\\Marius\\Desktop\\C#Vakariniai mokymai\\Picerija\\Picerija\\wwwroot\\paveiksliukai\\salami.png",
                            Kaina = 6.99m,
                            Pagaminta = true,
                            Pavadinimas = "Salami",
                            RusisId = 1,
                            Sudetis = "Padas, suris, Salami"
                        },
                        new
                        {
                            PicaId = 3,
                            Akcija = true,
                            Alergenai = "A,B,C",
                            ImageUrl = "C:\\Users\\Marius\\Desktop\\C#Vakariniai mokymai\\Picerija\\Picerija\\wwwroot\\paveiksliukai\\margarita.png",
                            Kaina = 7.99m,
                            Pagaminta = true,
                            Pavadinimas = "Taiti",
                            RusisId = 3,
                            Sudetis = "Padas, suris, Taiti"
                        },
                        new
                        {
                            PicaId = 4,
                            Akcija = true,
                            Alergenai = "A,B,C",
                            ImageUrl = "C:\\Users\\Marius\\Desktop\\C#Vakariniai mokymai\\Picerija\\Picerija\\wwwroot\\paveiksliukai\\vegetariana.png",
                            Kaina = 7.99m,
                            Pagaminta = true,
                            Pavadinimas = "Vegetariana",
                            RusisId = 2,
                            Sudetis = "Padas, suris, Darzoves"
                        });
                });

            modelBuilder.Entity("Picerija.Models.Rusis", b =>
                {
                    b.Property<int>("RusisId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Aprasymas")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RusisPavadinimas")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RusisId");

                    b.ToTable("Rusys");

                    b.HasData(
                        new
                        {
                            RusisId = 1,
                            RusisPavadinimas = "Astri"
                        },
                        new
                        {
                            RusisId = 2,
                            RusisPavadinimas = "Vegetariska"
                        },
                        new
                        {
                            RusisId = 3,
                            RusisPavadinimas = "Soti"
                        });
                });

            modelBuilder.Entity("Picerija.Models.Pica", b =>
                {
                    b.HasOne("Picerija.Models.Rusis", "Rusis")
                        .WithMany("Picos")
                        .HasForeignKey("RusisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
